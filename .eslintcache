[{"C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\index.js":"1","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\App.js":"2","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\Products\\Products.jsx":"3","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\Products\\Product\\Product.jsx":"4","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\Products\\Product\\styles.js":"5","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\index.js":"6","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\Navbar\\Navbar.jsx":"7","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\Navbar\\styles.js":"8","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\lib\\commerce.js":"9","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\Cart\\Cart.jsx":"10","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\Cart\\styles.js":"11","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx":"12","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\Cart\\CartItem\\styles.js":"13","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"14","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js":"15","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\CheckoutForm\\AddressForm.jsx":"16","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx":"17","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\CheckoutForm\\CustomTextField.jsx":"18","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\CheckoutForm\\Review.jsx":"19"},{"size":151,"mtime":1611744359981,"results":"20","hashOfConfig":"21"},{"size":2622,"mtime":1613230010347,"results":"22","hashOfConfig":"21"},{"size":592,"mtime":1612763731526,"results":"23","hashOfConfig":"21"},{"size":1333,"mtime":1612468591350,"results":"24","hashOfConfig":"21"},{"size":412,"mtime":1611989786781,"results":"25","hashOfConfig":"21"},{"size":233,"mtime":1612942929534,"results":"26","hashOfConfig":"21"},{"size":1467,"mtime":1612764476220,"results":"27","hashOfConfig":"21"},{"size":1631,"mtime":1612720418618,"results":"28","hashOfConfig":"21"},{"size":127,"mtime":1612379837246,"results":"29","hashOfConfig":"21"},{"size":1993,"mtime":1612941431255,"results":"30","hashOfConfig":"21"},{"size":597,"mtime":1612719156834,"results":"31","hashOfConfig":"21"},{"size":1318,"mtime":1612854236145,"results":"32","hashOfConfig":"21"},{"size":349,"mtime":1612720335238,"results":"33","hashOfConfig":"21"},{"size":2332,"mtime":1613228290453,"results":"34","hashOfConfig":"21"},{"size":1208,"mtime":1612942536582,"results":"35","hashOfConfig":"21"},{"size":4693,"mtime":1613227535023,"results":"36","hashOfConfig":"21"},{"size":2876,"mtime":1613229664084,"results":"37","hashOfConfig":"21"},{"size":560,"mtime":1613111269778,"results":"38","hashOfConfig":"21"},{"size":912,"mtime":1613226221333,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"kbgqi1",{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\index.js",[],["83","84"],"C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\App.js",["85","86","87"],"C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\Products\\Product\\styles.js",[],"C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\index.js",[],"C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\Navbar\\Navbar.jsx",["88","89"],"import React from 'react';\r\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography } from '@material-ui/core';\r\nimport { ShoppingCart } from '@material-ui/icons';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport logo from '../../assets/commerce.png';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Navbar = ({ totalItems }) => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <>\r\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n                <Toolbar>\r\n                    <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\">\r\n                        <img src={logo} alt=\"Commerce.js\" height=\"25px\" className={classes.image} />\r\n                        Commerce.js\r\n                    </Typography>\r\n                    <div className={classes.grow} />\r\n                    {location.pathname === '/' && (\r\n                    <div className={classes.button}>\r\n                        <IconButton component={Link} to=\"/cart\" aria-label=\"Show cart items\" color=\"inherit\">\r\n                            <Badge badgeContent={totalItems} color=\"secondary\">\r\n                                <ShoppingCart />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </div> )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\lib\\commerce.js",[],"C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\Cart\\styles.js",[],"C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["90","91","92","93"],"import React, { useState, useEffect } from 'react';\r\nimport { Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button } from '@material-ui/core';\r\n\r\nimport useStyles from './styles';\r\n\r\nimport { commerce } from '../../../lib/commerce';\r\nimport AddressForm from '../AddressForm';\r\nimport PaymentForm from '../PaymentForm';\r\n\r\nconst steps = ['Shipping Address', 'Payment Details'];\r\n\r\nconst Checkout = ({ cart }) => {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [checkoutToken, setCheckoutToken] = useState(null);\r\n    const [shippingData, setShippingData] = useState({});\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const generateToken = async() => {\r\n            try {\r\n                const token = await commerce.checkout.generateToken(cart.id, { type: 'cart'});\r\n\r\n                setCheckoutToken(token);\r\n            } catch(error) {\r\n\r\n            }\r\n        }\r\n\r\n        generateToken();\r\n    }, [cart]);\r\n\r\n    const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\r\n    const next = (data) => {\r\n        setShippingData(data);\r\n    }\r\n\r\n    const Confirmation = () => (\r\n        <div>\r\n            Confirmation\r\n        </div>\r\n    )\r\n\r\n    const Form = () => activeStep === 0\r\n        ? <AddressForm checkoutToken={checkoutToken} next={next} />\r\n        : <PaymentForm shippingData={shippingData} checkoutToken={checkoutToken} backStep={backStep} />\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.toolbar} />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\r\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map((step) => (\r\n                            <Step key={step}>\r\n                                <StepLabel>{step}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    { activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form /> }\r\n                </Paper>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Checkout;\r\n","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\CheckoutForm\\AddressForm.jsx",["94","95"],"import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { commerce } from '../../lib/commerce';\r\nimport FormInput from './CustomTextField';\r\n\r\nconst AddressForm = ({ checkoutToken, test }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState('');\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState('');\r\n  const methods = useForm();\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[0]);\r\n  };\r\n\r\n  const fetchSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\r\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\r\n\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchShippingCountries(checkoutToken.id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n  }, [shippingSubdivision]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n      <FormProvider {...methods}>\r\n        <form onSubmit={methods.handleSubmit((data) => test({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n          <Grid container spacing={3}>\r\n            <FormInput required name=\"firstName\" label=\"First name\" />\r\n            <FormInput required name=\"lastName\" label=\"Last name\" />\r\n            <FormInput required name=\"address1\" label=\"Address line 1\" />\r\n            <FormInput required name=\"email\" label=\"Email\" />\r\n            <FormInput required name=\"city\" label=\"City\" />\r\n            <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Country</InputLabel>\r\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\r\n                  <MenuItem key={item.id} value={item.id}>\r\n                    {item.label}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n};\r\nexport default AddressForm;","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx",["96"],"import React from 'react';\r\nimport { Typography, Button, Divider } from '@material-ui/core';\r\nimport { Elements, CardElement, ElementsConsumer } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\n\r\nimport Review from './Review';\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\r\n\r\nconst PaymentForm = ({ checkoutToken, backStep }) => {\r\n    const handleSubmit = (event, elements, stripe) => {\r\n        event.preventDefault();\r\n\r\n        if(!stripe || !elements) return;\r\n\r\n        const cardElement = elements.getElement(CardElement);\r\n\r\n        const { error, paymentMethod } = await stripe.createPaymentMethod({ type: 'card', card: cardElement });\r\n\r\n        if(error) {\r\n            console.log(error);\r\n        } else {\r\n            const orderData = {\r\n                line_items: checkoutToken.live.line_items,\r\n                customer: { firstname: shippingData.firstName, lastname: shippingData.lastname, email: shippingData.email },\r\n                shipping: { \r\n                    name: 'Primary', \r\n                    street: shippingData.address1, \r\n                    town_city: shippingData.city,\r\n                    county_state: shippingData.shippingSubdivision,\r\n                    postal_zip_code: shippingData.zip,\r\n                    country: shippingData.shippingCountry\r\n                },\r\n                fulfillment: { shippin_method: shippingData.shippingOption },\r\n                payment: {\r\n                    gateway: 'stripe',\r\n                    stripe: {\r\n                        payment_method_id: paymentMethod.id\r\n                    }\r\n                }\r\n            }\r\n\r\n            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Review checkoutToken={checkoutToken} />\r\n            <Divider />\r\n            <Typography variant=\"h6\" gutterBottom style={{ margin: '20px 0'}}>Payment method</Typography>\r\n            <Elements stripe={stripePromise}>\r\n                <ElementsConsumer>\r\n                    {({ elements, stripe }) => (\r\n                        <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\r\n                            <CardElement />\r\n                            <br /> <br />\r\n                            <div style={{ display: 'flex', justifyContent: 'space-between'}}>\r\n                                <Button variant=\"outlined\" onClick={backStep}>Back</Button>\r\n                                <Button type=\"submit\" variant=\"contained\" disabled={!stripe} color=\"primary\">\r\n                                    Pay { checkoutToken.live.subtotal.formatted_with_symbol }\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n                </ElementsConsumer>\r\n            </Elements>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaymentForm;\r\n","C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"C:\\Users\\SAkanbi\\Projects\\Samseen\\Codes\\e_commerce\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":9,"column":12,"nodeType":"103","messageId":"104","endLine":9,"endColumn":17},{"ruleId":"101","severity":1,"message":"105","line":45,"column":11,"nodeType":"103","messageId":"104","endLine":45,"endColumn":22},{"ruleId":"101","severity":1,"message":"106","line":51,"column":11,"nodeType":"103","messageId":"104","endLine":51,"endColumn":32},{"ruleId":"101","severity":1,"message":"107","line":2,"column":46,"nodeType":"103","messageId":"104","endLine":2,"endColumn":54},{"ruleId":"101","severity":1,"message":"108","line":2,"column":56,"nodeType":"103","messageId":"104","endLine":2,"endColumn":60},{"ruleId":"101","severity":1,"message":"109","line":2,"column":55,"nodeType":"103","messageId":"104","endLine":2,"endColumn":71},{"ruleId":"101","severity":1,"message":"110","line":2,"column":73,"nodeType":"103","messageId":"104","endLine":2,"endColumn":80},{"ruleId":"101","severity":1,"message":"111","line":2,"column":82,"nodeType":"103","messageId":"104","endLine":2,"endColumn":88},{"ruleId":"101","severity":1,"message":"112","line":32,"column":11,"nodeType":"103","messageId":"104","endLine":32,"endColumn":19},{"ruleId":"113","severity":1,"message":"114","line":41,"column":6,"nodeType":"115","endLine":41,"endColumn":8,"suggestions":"116"},{"ruleId":"113","severity":1,"message":"117","line":49,"column":6,"nodeType":"115","endLine":49,"endColumn":27,"suggestions":"118"},{"ruleId":null,"fatal":true,"severity":2,"message":"119","line":18,"column":42},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'order' is assigned a value but never used.","Identifier","unusedVar","'refreshCart' is assigned a value but never used.","'handleCaptureCheckout' is assigned a value but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'CircularProgress' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","'nextStep' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["122"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["123"],"Parsing error: 'await' is only allowed within async functions\n\n\u001b[0m \u001b[90m 16 | \u001b[39m        \u001b[36mconst\u001b[39m cardElement \u001b[33m=\u001b[39m elements\u001b[33m.\u001b[39mgetElement(\u001b[33mCardElement\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 18 | \u001b[39m        \u001b[36mconst\u001b[39m { error\u001b[33m,\u001b[39m paymentMethod } \u001b[33m=\u001b[39m await stripe\u001b[33m.\u001b[39mcreatePaymentMethod({ type\u001b[33m:\u001b[39m \u001b[32m'card'\u001b[39m\u001b[33m,\u001b[39m card\u001b[33m:\u001b[39m cardElement })\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 20 | \u001b[39m        \u001b[36mif\u001b[39m(error) {\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m            console\u001b[33m.\u001b[39mlog(error)\u001b[33m;\u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"128","text":"129"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"130","text":"131"},[1708,1710],"[checkoutToken.id]",[1961,1982],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]